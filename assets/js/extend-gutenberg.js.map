{"version":3,"sources":["../../node_modules/classnames/index.js","../../node_modules/lodash.assign/index.js","extend-gutenberg/space-columns.js","extend-gutenberg.js"],"names":["createHigherOrderComponent","wp","compose","Fragment","element","InspectorControls","blockEditor","components","PanelBody","SelectControl","addFilter","hooks","__","i18n","enableClassControlColumnsOnBlocks","addClassSpacingColumnsAttribute","settings","name","includes","attributes","classSpaceTop","type","default","classSpaceBottom","addClassSpacingColumnsInspectorControl","BlockEdit","props","setAttributes","label","value","addClassSpacingColumnsEditorInspectorControl","BlockListBlock","className","addClassSpacingColumnsFrontend","blockType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"extend-gutenberg.js","sourceRoot":"../../src/js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = assign;\n","import classnames from 'classnames';\nimport assign from 'lodash.assign';\n\nconst { createHigherOrderComponent } = wp.compose;\nconst { Fragment } = wp.element;\nconst { InspectorControls } = wp.blockEditor;\nconst { PanelBody, SelectControl } = wp.components;\nconst { addFilter } = wp.hooks;\nconst { __ } = wp.i18n;\n\n// Enable class control on the following blocks\nconst enableClassControlColumnsOnBlocks = [\n    'core/columns'\n];\n\n/**\n* Add class attribute to columns block\n*/\nconst addClassSpacingColumnsAttribute = ( settings, name ) => {\n\t// Do nothing if it's another block than our defined ones.\n\tif ( ! enableClassControlColumnsOnBlocks.includes( name ) ) {\n\t\treturn settings;\n\t}\n\n    // Use Lodash's assign to gracefully handle if attributes are undefined\n    settings.attributes = assign( settings.attributes, {\n       classSpaceTop: {\n           type: 'string',\n           default: '',\n       },\n       classSpaceBottom: {\n           type: 'string',\n           default: '',\n       }\n    });\n\n    return settings;\n};\naddFilter( 'blocks.registerBlockType', 'clay/class-columns/add-class-spacing-columns-attribute', addClassSpacingColumnsAttribute );\n\n/**\n* Add class control to inspector \n*/\nconst addClassSpacingColumnsInspectorControl = createHigherOrderComponent( ( BlockEdit ) => {\n    return ( props ) => {\n        const {\n            attributes: { classSpaceTop, classSpaceBottom },\n            setAttributes,\n            name,\n        } = props;\n\n        // Do nothing if it's another block than our defines ones.\n\t\tif ( ! enableClassControlColumnsOnBlocks.includes( props.name ) ) {\n\t\t\treturn (\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t);\n\t\t}\n\n        return (\n            <Fragment>\n                <BlockEdit { ...props } />\n\n                <InspectorControls>\n                    <PanelBody\n\t\t\t\t\t\ttitle={ __( 'Group Space Options', 'clay' ) }\n\t\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\t>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Space top', 'clay' ) }\n\t\t\t\t\t\t\tvalue={ classSpaceTop }\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Default', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Small', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: 'small',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Medium', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: 'medium',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Large', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: 'large',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\tsetAttributes({ classSpaceTop: value});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n                        <SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Space bottom', 'clay' ) }\n\t\t\t\t\t\t\tvalue={ classSpaceBottom }\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Default', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Small', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: 'small',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Medium', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: 'medium',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'Large', 'clay' ),\n\t\t\t\t\t\t\t\t\tvalue: 'large',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\tsetAttributes({ classSpaceBottom: value});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n                        \n                    </PanelBody>\n                </InspectorControls>\n            </Fragment>\n        );\n    }\n}, 'addClassSpacingColumnsInspectorControl' );\naddFilter( 'editor.BlockEdit', 'clay/class-columns/add-class-spacing-columns-inspector-control', addClassSpacingColumnsInspectorControl );\n\n/**\n* Add class to the block in the editor\n*/\nconst addClassSpacingColumnsEditorInspectorControl = createHigherOrderComponent( ( BlockListBlock ) => {\n    return ( props ) => {\n\t\tconst {\n\t\t\tattributes: { classSpaceTop, classSpaceBottom },\n\t\t\tclassName,\n\t\t\tname,\n\t\t} = props;\n\n\t\t// Do nothing if it's another block than our defined ones.\n\t\tif ( ! enableClassControlColumnsOnBlocks.includes( props.name ) ) {\n\t\t\treturn (\n\t\t\t\t<BlockListBlock { ...props } />\n\t\t\t);\n\t\t}\n\n        return (\n            <BlockListBlock\n                {...props}\n\t\t\t\tclassName={\n                    classnames(\n                        className, \n                        classSpaceTop ? `has-space-top-${classSpaceTop}` : '',\n                        classSpaceBottom ? `has-space-bottom-${classSpaceBottom}` : ''\n                    )\n                }\n            />\n        );\n    }\n}, 'addClassSpacingColumnsEditorInspectorControl' );\naddFilter( 'editor.BlockListBlock', 'clay/class-columns/add-class-spacing-columns-editor-inspector-control', addClassSpacingColumnsEditorInspectorControl );\n\n/**\n* Add class to the block in the front-end\n*/\nfunction addClassSpacingColumnsFrontend( props, blockType, attributes) {\n\t// Do nothing if it's another block than our defined ones.\n\tif ( ! enableClassControlColumnsOnBlocks.includes( blockType.name ) ) {\n\t\treturn props;\n\t}\n\n    const { className } = props;\n    const { classSpaceTop, classSpaceBottom } = attributes;\n\n    return assign( {}, props, {\n        className: classnames(\n            className, \n            classSpaceTop ? `has-space-top-${classSpaceTop}` : '',\n            classSpaceBottom ? `has-space-bottom-${classSpaceBottom}` : ''\n        ),\n    });\n}\naddFilter( 'blocks.getSaveContent.extraProps', 'clay/class-columns/add-class-spacing-columns-frontend', addClassSpacingColumnsFrontend );\n","import './extend-gutenberg/space-columns';"]}